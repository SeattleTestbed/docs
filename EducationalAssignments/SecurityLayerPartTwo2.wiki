
= Attacking a reference monitor =  

This assignment illustrates how to attack reference monitors.  Attacks will based on the test cases developed in '''[https://seattle.cs.washington.edu/wiki/EducationalAssignments/SecurityLayerPartOne SecurityLayerPartOne]'''.  

'''NOTE WINDOWS USERS:''' You must have Python2.5 or Python2.6, to complete this assignment. Instructions on how to get Python for windows can be found [InstallPythonOnWindows here].  These instructions also illustrate how to check if Python is already installed.

[[TOC(inline)]]


[[BR]]
== Overview ==
----
Students will be sent reference monitors from other students in the class.  They will attack these reference monitors by writing a series of robust test cases. These cases will attempt to write "MZ" to the first two characters of a file.  After testing, students will write a report of their findings, including all attacks that succeeded and failed.  Also students should include a critique of the references monitors they where given.  This will act as a natural introduction to code auditing.   

'''Note:''' A full discourse of how to write test cases is given below.      

[[BR]]
== Prerequisites ==

[[BR]]
=== Getting to know Python/Repy ===
----
Students will need Python and the Repy API in order to complete this assignment.  Repy can be downloaded '''[https://seattle.cs.washington.edu/geni/download/flibble/ here]'''.  Once obtained students should read the Repy tutorial found [wiki:RepyTutorial here].
[[BR]]
=== Helpful links ===
----
The following links will aid students in becoming comfortable with Python, Repy and seattle:
 * Python tutorial: '''[http://docs.python.org/tutorial/ here]'''
 * Seattle tutorial: '''[https://seattle.cs.washington.edu/wiki/PythonVsRepy here]'''
[[BR]]
== Implementation ==


[[BR]]
=== Attacking other security layers ===
----

A tutorial on how to write security layers can be found [wiki:RepyV2SecurityLayers here].  At the end of the tutorial students are shown '''how to test their security layers with an example'''. 

The example provided in the link is a basic attack.  In order to complete the assignment students will be provided with a set of reference monitors, by the professor.  They will create attacks which attempt to write "MZ" to the first two characters of a file.  Attacks should include several methods of attempting to do this.  Students should be provided with at least five reference monitors to test their attack. 
 
If this assignment is used in conjunction with '''[https://seattle.cs.washington.edu/wiki/EducationalAssignments/SecurityLayerPartOne SecurityLayerPartOne]''', students should be graded based on how well their reference monitor performs when attacked by others.   In addition instructors may choose to remove points if student's reference monitor is successfully attacked.  In all cases students should be graded on how well they critique the reference monitors of others.

'''Note:''' These other reference monitors should come from the other students.
 In addition instructors may choose to remove points if student's reference monitor is successfully attacked.

  
[[BR]]
== Notes and Resources ==
----
   
 * The following link is an excellent source for information about security layers: http://www.cs.washington.edu/homes/arvind/papers/ccs10.pdf

 * [https://seattle.cs.washington.edu/browser/seattle/branches/repy_v2/benchmarking-support/allnoopsec.py repy_v2/benchmarking-support/allnoopsec.py] is an empty security layer that doesn't perform any operations.

 * [https://seattle.cs.washington.edu/browser/seattle/branches/repy_v2/benchmarking-support/all-logsec.py repy_v2/benchmarking-support/all-logsec.py] is security layer that performs logging functions.

 * Students are able to add multiple security layers to Repy, this may be useful for testing different mitigations separately.

 * It may be instructive to have students attack more than five reference monitors.

 * In repy 'log' replaces 'print' from python.  Many students find this to be a stumbling block.


[[BR]]
== Extra Credit ==
----
Students can be provided with a second set of reference monitors.  These attempt to prevent students from writing 'p0wnd' to a file. 
[[BR]]
== What to turn in? ==
----
 
 * Turn in the test cases used to attack a given reference monitor.  
 * Turn in the write up of each reference monitor attacked, with critique of the reference monitor.  Critique should include all test cases that worked.
 * Turn in test cases and write up for Extra Credit as well.