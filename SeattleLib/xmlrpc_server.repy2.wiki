= xmlrpc_server.repy =

Provide a usable XML-RPC server interface for RePy code. This module aims to be as similar in behavior to the Python SimpleXMLRPCServer as is possible with RePy. This module helps to implement the client-side XML-RPC protocol. See http://en.wikipedia.org/wiki/XML-RPC and http://docs.python.org/library/simplexmlrpcserver.html for more details.

A programmer may use this module to initiate a new instance server. xmlrpc_server contains all the basic functionality of a server.

Note that this module uses [wiki:SeattleLib/xmlrpc_common.repy], which means programmers should really include this file. This server can be used in variety of ways, making this more useful than the common functions alone.

=== Classes & Functions ===
{{{
class xmlrpc_server_SimpleXMLRPCServer:
}}}
     Provide a simple server-side API for programs wishing to expose their functions to an XMLRPC client.

    Notes:[[BR]]
    * Raises ValueError if the host part of the address passed to the constructor is a hostname that resolves to more than one ip.

{{{
def register_function(self, function, name):
}}}
    Register a callback function with this XMLRPC server.

    Notes:[[BR]]
    * function is the function to expose to the XMLRPC client.
    * name is the name for this function that the client will call.

{{{
def serve_forever(self):
}}}
    Makes the server start serving requests. Returns control of the thread to the calling code.

{{{
def shutdown(self):
}}}
    Shuts down the server (tells the serving loop to break).

=== Example Usage ===

{{{
# create a server object
server = xmlrpc_server_SimpleXMLRPCServer(("localhost", 12345))
# register a function
server.register_function(pow)
# wait for clients to connect and call the function
server.serve_forever()
}}}

=== Includes ===
[wiki:SeattleLib/xmlparse.repy][[BR]]
[wiki:SeattleLib/xmlrpc_common.repy][[BR]]
[wiki:SeattleLib/urllib.repy][[BR]]