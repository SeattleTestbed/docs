= Indoctrination =

 * Educational support
 * auto-grading
 * student support

= Overview =

This team focuses on Seattle's primary mission -- adoption of Seattle by the education community. Our task is to help with adoption of Seattle in classes at UW and at other Universities. As well as work on improving various portions of Seattle for use by educators. The plan is to work on auto-grading support that educators can use for projects using Seattle in their classes, as well as to work on assignments that educators can use in their classes.

== Meetings ==

Tuesdays 10am-11am 4th floor breakout in CSE

== Auto-grading support ==

For auto-grading we will use a network testbed called [http://www.emulab.net/ Emulab]. Emulab provides a rich [https://www.emulab.net/xmlrpcapi.php3 XML-RPC API] for configuring nodes, loading software on the nodes, etc. We will use this API to build an auto-grader mash-up.

Another interface that might be useful to us in making this mashup is Emulab's [http://users.emulab.net/trac/emulab/wiki/eventsystem event system]. While the XML-RPC interface is mostly about swapping experiments in and out, the event system is about dynamic control while the experiment is running, such as firing off programs, etc. Injecting events into the event system is best done on the nodes themselves - so you can set a [http://users.emulab.net/trac/emulab/wiki/nscommands#tb-set-node-startcmd startup command in the NS file] that fires off events to start up programs, terminate the experiment when finished, etc.

= Week 1 =
 * Convince JZ to use Seattle in his networks class
 * Write small programs to interface with Emulab to gain familiarity with their API
 * Web form for assignment submissions and a submission script that interfaces with the web form via python's http lib.
 * Architecture for the auto-grader sketch

= Next Meeting =
 * Set up a coding sprint date and deadlines
 * Specify first assignment that will be used as our test case
 * Emulab accounts