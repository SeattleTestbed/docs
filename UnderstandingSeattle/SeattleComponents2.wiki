Seattle's Components

[[Image(componentdiagram.gif)]]

There are three main components it's important to understand to understand how Seattle works.

* Vessel ---   A vessel is a programming language virtual machine that runs a user's code (currently the only language supported is RestrictedPython).   Vessels prevent the program running in them from performing unsafe actions (like opening the user's credit card information).   Vessels also have a specified number of resources they are allowed to consume.   The vessel restricts the program from consuming more than the allowed number of resources.   

 
* Node Manager  --- The purpose of the node manager is to manage the vessels on a single machine.   The node manager restricts access to the vessels to only authorized parties.   For example, every vessel has an owner and a set of users.   The owner can change the set of users, change ownership to another party, split the vessel into multiple vessels, etc. (see the Node Manager API documentation for more information).   Users are allowed to upload files to the vessel, start and stop programs, read the vessel's log, and other simple operations.   The node manager also ensures that the total amount of consumed resources does not vary as vessels are split and joined.   
 
* Experiment Manager --- Researchers who want to run programs on the vessels they control are likely to use an experiment manager (like seash).   An experiment manager locates vessels that the user controls, and interacts with the node manager to control those vessels.   For example, an experiment manager may take a user's command to deploy foo.py everywhere and go to contact all of the vessels the user owns on each of the node manager (saving the user the headache of contacting nodes manually).