= Seattle Infrastructure Architecture =
== Overview ==

This page explains the architecture of the three central ''infrastructure'' components for the testbed --- the [https://seattleclearinghouse.poly.edu/html/accounts_help#introduction Seattle Clearinghouse], [wiki:CustomInstallerBuilder Custom Installer Builder], and the [wiki:SoftwareUpdaterSetup software update] server. For a discussion of the perspective of people participating in the Seattle Testbed by means of donating resources, planning, and running experiments, please see [wiki:UnderstandingSeattle/SeattleComponents this wiki page].

[[TOC(inline)]]

-----

= Infrastructure Components =
== Clearinghouse ==
The Seattle Testbed consists of a large number of Seattle VMs (virtual machines) running on computing devices provided by volunteers. These donated VMs are made available to registered users through an infrastructure component called the [https://seattleclearinghouse.poly.edu/ Seattle Clearinghouse].

In addition to handing out resources donated to the general public, the Seattle Clearinghouse can also track donations on behalf of registered users. Every donation on their behalf will grant a user a greater number of resources on other machines in return. This ''tit-for-tat'' tactic both enables users to run larger experiments, and helps scale the testbed.

The Seattle Clearinghouse relies on identifying data included in each install of the Seattle Testbed software to track and credit resource donations: Depending on the user that should be credited (the general public is also treated as a user in this respect), the install announces a user-specific ''public key'' on the Seattle advertise services.

== Custom Installer Builder ==
The [https://custominstallerbuilder.poly.edu/ Custom Installer Builder] is the infrastructure component putting together the base Seattle installer with a user's donation-tracking public key. The Seattle installer customized such is provided to users seeking to increase their credit of VMs on the clearinghouse. (The [wiki:UnderstandingSeattle/SeattleComponents Seattle Components wiki page] shows another use case for the Custom Installer Builder).

== Software Update Site ==
Lastly, every Seattle install contains information which software update site (URL) to contact for downloading the latest Seattle revision when it becomes available, and also a cryptographic key that is used to check the integrity of updates.



= Technical Aspects =

The infrastructure components use the following interfaces and configuration between one another:

 1. The software updater public key and URL go into `softwareupdater.py`, part of the ''base installer'' packaged by the custom installer builder
 1. The clearinghouse requests packaging of an installer with particular user public keys from the custom installer builder via XML-RPC over HTTPS. The custom installer builder URL used is stored in the clearinghouse configuration.

The consequence of item 1 above is that the custom installer builder only needs to know the software updater server's URL, but is otherwise independent from it (e.g., can run on a different server).

Similarly, from item 2 above, the clearinghouse can use any custom installer builder whose URL it knows and whose base installer package suits it. For example, a Seattle-based testbed might choose to use Seattle's Custom Installer Builder to avoid setting up its own.

This architecture also makes it easy to deploy (or gradually update) new versions of infrastructure components while keeping others unchanged.
